/*
 * com_nw_bookify_ktor_backend API
 * com_nw_bookify_ktor_backend API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Book
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-06T09:22:29.980099+01:00[Europe/Berlin]")
public class Book {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_ISBN10 = "isbn10";
  @SerializedName(SERIALIZED_NAME_ISBN10)
  private String isbn10;

  public static final String SERIALIZED_NAME_ISBN13 = "isbn13";
  @SerializedName(SERIALIZED_NAME_ISBN13)
  private String isbn13;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_SUBTITLE = "subtitle";
  @SerializedName(SERIALIZED_NAME_SUBTITLE)
  private String subtitle;

  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_PUBLISHER = "publisher";
  @SerializedName(SERIALIZED_NAME_PUBLISHER)
  private String publisher;

  public static final String SERIALIZED_NAME_PAGES = "pages";
  @SerializedName(SERIALIZED_NAME_PAGES)
  private Integer pages;

  public static final String SERIALIZED_NAME_IMAGE_URL = "imageUrl";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;

  public static final String SERIALIZED_NAME_SELF_LINK = "selfLink";
  @SerializedName(SERIALIZED_NAME_SELF_LINK)
  private String selfLink;

  public static final String SERIALIZED_NAME_PUBLISHED_DATE = "publishedDate";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_DATE)
  private OffsetDateTime publishedDate;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  /**
   * Gets or Sets printType
   */
  @JsonAdapter(PrintTypeEnum.Adapter.class)
  public enum PrintTypeEnum {
    COMPANION("Companion"),
    
    TYPE("type"),
    
    BOOK("BOOK"),
    
    EBOOK("EBOOK"),
    
    MAGAZINE("MAGAZINE");

    private String value;

    PrintTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PrintTypeEnum fromValue(String value) {
      for (PrintTypeEnum b : PrintTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PrintTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PrintTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PrintTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PrintTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PRINT_TYPE = "printType";
  @SerializedName(SERIALIZED_NAME_PRINT_TYPE)
  private PrintTypeEnum printType;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_MATURITY_RATING = "maturityRating";
  @SerializedName(SERIALIZED_NAME_MATURITY_RATING)
  private String maturityRating;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_INFO_LINK = "infoLink";
  @SerializedName(SERIALIZED_NAME_INFO_LINK)
  private String infoLink;

  /**
   * Gets or Sets rating
   */
  @JsonAdapter(RatingEnum.Adapter.class)
  public enum RatingEnum {
    COMPANION("Companion"),
    
    RATING("rating"),
    
    ZERO("ZERO"),
    
    ONE("ONE"),
    
    TWO("TWO"),
    
    THREE("THREE"),
    
    FOUR("FOUR"),
    
    FIVE("FIVE");

    private String value;

    RatingEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RatingEnum fromValue(String value) {
      for (RatingEnum b : RatingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RatingEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RatingEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RatingEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RatingEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private RatingEnum rating;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  /**
   * Gets or Sets readStatus
   */
  @JsonAdapter(ReadStatusEnum.Adapter.class)
  public enum ReadStatusEnum {
    COMPANION("Companion"),
    
    STATUS("status"),
    
    UNREAD("UNREAD"),
    
    READING("READING"),
    
    READ("READ"),
    
    UNFINISHED("UNFINISHED");

    private String value;

    ReadStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReadStatusEnum fromValue(String value) {
      for (ReadStatusEnum b : ReadStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ReadStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReadStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReadStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ReadStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_READ_STATUS = "readStatus";
  @SerializedName(SERIALIZED_NAME_READ_STATUS)
  private ReadStatusEnum readStatus;

  public static final String SERIALIZED_NAME_ADDED_ON_DATE = "addedOnDate";
  @SerializedName(SERIALIZED_NAME_ADDED_ON_DATE)
  private OffsetDateTime addedOnDate;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private String tags;


  public Book id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Book isbn10(String isbn10) {
    
    this.isbn10 = isbn10;
    return this;
  }

   /**
   * Get isbn10
   * @return isbn10
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsbn10() {
    return isbn10;
  }


  public void setIsbn10(String isbn10) {
    this.isbn10 = isbn10;
  }


  public Book isbn13(String isbn13) {
    
    this.isbn13 = isbn13;
    return this;
  }

   /**
   * Get isbn13
   * @return isbn13
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsbn13() {
    return isbn13;
  }


  public void setIsbn13(String isbn13) {
    this.isbn13 = isbn13;
  }


  public Book title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public Book subtitle(String subtitle) {
    
    this.subtitle = subtitle;
    return this;
  }

   /**
   * Get subtitle
   * @return subtitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubtitle() {
    return subtitle;
  }


  public void setSubtitle(String subtitle) {
    this.subtitle = subtitle;
  }


  public Book author(String author) {
    
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthor() {
    return author;
  }


  public void setAuthor(String author) {
    this.author = author;
  }


  public Book publisher(String publisher) {
    
    this.publisher = publisher;
    return this;
  }

   /**
   * Get publisher
   * @return publisher
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPublisher() {
    return publisher;
  }


  public void setPublisher(String publisher) {
    this.publisher = publisher;
  }


  public Book pages(Integer pages) {
    
    this.pages = pages;
    return this;
  }

   /**
   * Get pages
   * @return pages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPages() {
    return pages;
  }


  public void setPages(Integer pages) {
    this.pages = pages;
  }


  public Book imageUrl(String imageUrl) {
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImageUrl() {
    return imageUrl;
  }


  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public Book selfLink(String selfLink) {
    
    this.selfLink = selfLink;
    return this;
  }

   /**
   * Get selfLink
   * @return selfLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSelfLink() {
    return selfLink;
  }


  public void setSelfLink(String selfLink) {
    this.selfLink = selfLink;
  }


  public Book publishedDate(OffsetDateTime publishedDate) {
    
    this.publishedDate = publishedDate;
    return this;
  }

   /**
   * Get publishedDate
   * @return publishedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPublishedDate() {
    return publishedDate;
  }


  public void setPublishedDate(OffsetDateTime publishedDate) {
    this.publishedDate = publishedDate;
  }


  public Book description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Book printType(PrintTypeEnum printType) {
    
    this.printType = printType;
    return this;
  }

   /**
   * Get printType
   * @return printType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PrintTypeEnum getPrintType() {
    return printType;
  }


  public void setPrintType(PrintTypeEnum printType) {
    this.printType = printType;
  }


  public Book category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }


  public Book maturityRating(String maturityRating) {
    
    this.maturityRating = maturityRating;
    return this;
  }

   /**
   * Get maturityRating
   * @return maturityRating
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMaturityRating() {
    return maturityRating;
  }


  public void setMaturityRating(String maturityRating) {
    this.maturityRating = maturityRating;
  }


  public Book language(String language) {
    
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLanguage() {
    return language;
  }


  public void setLanguage(String language) {
    this.language = language;
  }


  public Book infoLink(String infoLink) {
    
    this.infoLink = infoLink;
    return this;
  }

   /**
   * Get infoLink
   * @return infoLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInfoLink() {
    return infoLink;
  }


  public void setInfoLink(String infoLink) {
    this.infoLink = infoLink;
  }


  public Book rating(RatingEnum rating) {
    
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RatingEnum getRating() {
    return rating;
  }


  public void setRating(RatingEnum rating) {
    this.rating = rating;
  }


  public Book comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public Book readStatus(ReadStatusEnum readStatus) {
    
    this.readStatus = readStatus;
    return this;
  }

   /**
   * Get readStatus
   * @return readStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReadStatusEnum getReadStatus() {
    return readStatus;
  }


  public void setReadStatus(ReadStatusEnum readStatus) {
    this.readStatus = readStatus;
  }


  public Book addedOnDate(OffsetDateTime addedOnDate) {
    
    this.addedOnDate = addedOnDate;
    return this;
  }

   /**
   * Get addedOnDate
   * @return addedOnDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getAddedOnDate() {
    return addedOnDate;
  }


  public void setAddedOnDate(OffsetDateTime addedOnDate) {
    this.addedOnDate = addedOnDate;
  }


  public Book tags(String tags) {
    
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTags() {
    return tags;
  }


  public void setTags(String tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Book book = (Book) o;
    return Objects.equals(this.id, book.id) &&
        Objects.equals(this.isbn10, book.isbn10) &&
        Objects.equals(this.isbn13, book.isbn13) &&
        Objects.equals(this.title, book.title) &&
        Objects.equals(this.subtitle, book.subtitle) &&
        Objects.equals(this.author, book.author) &&
        Objects.equals(this.publisher, book.publisher) &&
        Objects.equals(this.pages, book.pages) &&
        Objects.equals(this.imageUrl, book.imageUrl) &&
        Objects.equals(this.selfLink, book.selfLink) &&
        Objects.equals(this.publishedDate, book.publishedDate) &&
        Objects.equals(this.description, book.description) &&
        Objects.equals(this.printType, book.printType) &&
        Objects.equals(this.category, book.category) &&
        Objects.equals(this.maturityRating, book.maturityRating) &&
        Objects.equals(this.language, book.language) &&
        Objects.equals(this.infoLink, book.infoLink) &&
        Objects.equals(this.rating, book.rating) &&
        Objects.equals(this.comment, book.comment) &&
        Objects.equals(this.readStatus, book.readStatus) &&
        Objects.equals(this.addedOnDate, book.addedOnDate) &&
        Objects.equals(this.tags, book.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, isbn10, isbn13, title, subtitle, author, publisher, pages, imageUrl, selfLink, publishedDate, description, printType, category, maturityRating, language, infoLink, rating, comment, readStatus, addedOnDate, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Book {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isbn10: ").append(toIndentedString(isbn10)).append("\n");
    sb.append("    isbn13: ").append(toIndentedString(isbn13)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    subtitle: ").append(toIndentedString(subtitle)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    pages: ").append(toIndentedString(pages)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    selfLink: ").append(toIndentedString(selfLink)).append("\n");
    sb.append("    publishedDate: ").append(toIndentedString(publishedDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    printType: ").append(toIndentedString(printType)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    maturityRating: ").append(toIndentedString(maturityRating)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    infoLink: ").append(toIndentedString(infoLink)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    readStatus: ").append(toIndentedString(readStatus)).append("\n");
    sb.append("    addedOnDate: ").append(toIndentedString(addedOnDate)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

